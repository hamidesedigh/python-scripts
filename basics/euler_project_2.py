# -*- coding: utf-8 -*-
"""
Created on Tue Jun 17 23:38:43 2025

@author: hamid

Problem 2: Multiples of 3 or 5
---------------------------------------------------------------------------------
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and
2 the first 10 terms will be:
 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def is_even(n: int) -> bool:
    """Return True if n is even, otherwise False."""
    return n % 2 == 0


def even_fibo_sum(limit: int) -> int:
    """
    Return the sum of even Fibonacci numbers below a given limit.

    Parameters:
        limit (int): Upper bound (exclusive).

    Returns:
        int: Sum of even Fibonacci numbers below limit.
    """
    a, b = 1, 2
    total = 0
    while a < limit:
        if is_even(a):
            total += a
        a, b = b, a + b
    return total


if __name__ == "__main__":
    print(is_even(4))  # True
    print(even_fibo_sum(4_000_000))  # Project Euler Problem 2 result

